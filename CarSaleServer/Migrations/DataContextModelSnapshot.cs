// <auto-generated />
using System;
using CarSale.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarSale.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarSale.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aa8cbb73-653c-43cf-ae03-125a91ae59b9"),
                            Name = "admin",
                            PasswordHash = new byte[] { 81, 5, 11, 52, 232, 214, 92, 204, 53, 255, 104, 50, 134, 137, 131, 182, 20, 176, 127, 149, 163, 3, 182, 52, 122, 212, 128, 98, 107, 112, 90, 57, 148, 73, 63, 239, 217, 81, 244, 82, 126, 97, 13, 212, 71, 200, 13, 194, 173, 133, 70, 161, 188, 55, 241, 244, 81, 199, 214, 179, 126, 245, 151, 79 },
                            PasswordSalt = new byte[] { 109, 241, 202, 38, 78, 77, 164, 63, 197, 152, 39, 200, 243, 32, 195, 21, 231, 238, 6, 139, 91, 135, 187, 159, 239, 3, 34, 38, 224, 73, 127, 80, 130, 34, 114, 32, 149, 84, 106, 187, 213, 251, 192, 63, 116, 39, 133, 94, 36, 251, 154, 208, 208, 179, 190, 129, 122, 40, 165, 107, 101, 152, 156, 238, 175, 34, 153, 14, 121, 127, 123, 68, 142, 46, 65, 221, 242, 156, 223, 135, 26, 220, 159, 124, 36, 54, 156, 8, 217, 47, 177, 176, 4, 198, 124, 241, 82, 64, 22, 9, 29, 184, 123, 158, 18, 138, 159, 4, 226, 4, 176, 149, 163, 43, 77, 181, 120, 48, 172, 185, 12, 133, 42, 17, 57, 214, 105, 249 }
                        });
                });

            modelBuilder.Entity("CarSaleBackEnd.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kilometers")
                        .HasColumnType("int");

                    b.Property<int>("MakeId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime>("Year")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MakeId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 2000,
                            Color = "white",
                            Kilometers = 1000,
                            MakeId = 1,
                            Model = "corolla",
                            Name = "xei",
                            Price = 40000,
                            Year = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2429,
                            Color = "brown",
                            Kilometers = 59210,
                            MakeId = 1,
                            Model = "hilux",
                            Name = "sw4",
                            Price = 12144,
                            Year = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5912,
                            Color = "black",
                            Kilometers = 71293,
                            MakeId = 2,
                            Model = "montero",
                            Name = "pajero",
                            Price = 36000,
                            Year = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 312,
                            Color = "red",
                            Kilometers = 3000,
                            MakeId = 2,
                            Model = "mirage",
                            Name = "g4",
                            Price = 49000,
                            Year = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 59182,
                            Color = "blue",
                            Kilometers = 0,
                            MakeId = 4,
                            Model = "a5",
                            Name = "sportback ambiente",
                            Price = 250000,
                            Year = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            Color = "yellow",
                            Kilometers = 6000,
                            MakeId = 3,
                            Model = "ecosport",
                            Name = "xlt",
                            Price = 25000,
                            Year = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12198,
                            Color = "grey",
                            Kilometers = 1235,
                            MakeId = 5,
                            Model = "gol",
                            Name = "msi total trendline",
                            Price = 35000,
                            Year = new DateTime(2017, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Color = "silver",
                            Kilometers = 6231,
                            MakeId = 4,
                            Model = "tt",
                            Name = "fsi tronic turbo",
                            Price = 200000,
                            Year = new DateTime(2007, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1928,
                            Color = "orange",
                            Kilometers = 12938,
                            MakeId = 3,
                            Model = "ranger",
                            Name = "xl 2.8",
                            Price = 70000,
                            Year = new DateTime(2002, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12568,
                            Color = "green",
                            Kilometers = 192102,
                            MakeId = 3,
                            Model = "f-100",
                            Name = "3.6 super gasolina",
                            Price = 10000,
                            Year = new DateTime(1982, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4236,
                            Color = "purple",
                            Kilometers = 82191,
                            MakeId = 5,
                            Model = "santana",
                            Name = "gli 2.0",
                            Price = 27000,
                            Year = new DateTime(1996, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 123566,
                            Color = "black",
                            Kilometers = 1000,
                            MakeId = 2,
                            Model = "outlander",
                            Name = "gt v6",
                            Price = 65000,
                            Year = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Color = "white",
                            Kilometers = 100,
                            MakeId = 5,
                            Model = "t-cross",
                            Name = "200 tsi total",
                            Price = 55000,
                            Year = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1254,
                            Color = "white",
                            Kilometers = 500,
                            MakeId = 4,
                            Model = "rs4",
                            Name = "avant quattro",
                            Price = 290000,
                            Year = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 132,
                            Color = "dark blue",
                            Kilometers = 1223,
                            MakeId = 4,
                            Model = "q3",
                            Name = "ambiente quattro",
                            Price = 160000,
                            Year = new DateTime(2013, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CarSaleBackEnd.Models.Make", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Makes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "toyota"
                        },
                        new
                        {
                            Id = 2,
                            Name = "mitsubishi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "ford"
                        },
                        new
                        {
                            Id = 4,
                            Name = "audi"
                        },
                        new
                        {
                            Id = 5,
                            Name = "volkswagen"
                        });
                });

            modelBuilder.Entity("CarSaleBackEnd.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("CarSaleBackEnd.Models.Car", b =>
                {
                    b.HasOne("CarSaleBackEnd.Models.Make", "Make")
                        .WithMany("Cars")
                        .HasForeignKey("MakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Make");
                });

            modelBuilder.Entity("CarSaleBackEnd.Models.Photo", b =>
                {
                    b.HasOne("CarSaleBackEnd.Models.Car", "Car")
                        .WithOne("Photo")
                        .HasForeignKey("CarSaleBackEnd.Models.Photo", "CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("CarSaleBackEnd.Models.Car", b =>
                {
                    b.Navigation("Photo");
                });

            modelBuilder.Entity("CarSaleBackEnd.Models.Make", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
